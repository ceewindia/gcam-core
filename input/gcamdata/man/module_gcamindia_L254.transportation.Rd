% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zchunk_L254.transportation_India.R
\name{module_gcamindia_L254.transportation}
\alias{module_gcamindia_L254.transportation}
\title{module_gcamindia_L254.transportation}
\usage{
module_gcamindia_L254.transportation(command, ...)
}
\arguments{
\item{command}{API command to execute}

\item{...}{other optional parameters, depending on command}
}
\value{
Depends on \code{command}: either a vector of required inputs,
a vector of output names, or (if \code{command} is "MAKE") all
the generated outputs: \code{L254.DeleteSupplysector_Indiatrn}, \code{L254.DeleteFinalDemand_Indiatrn},
\code{L254.Supplysector_trn_India}, \code{L254.FinalEnergyKeyword_trn_India}, \code{A54.india_tranSubsectorLogit_India},
\code{L254.tranSubsectorShrwtFllt_India}, \code{L254.tranSubsectorInterp_India}, \code{L254.tranSubsectorSpeed_India},
\code{L254.tranSubsectorSpeed_passthru_India}, \code{L254.tranSubsectorSpeed_noVOTT_India},
\code{L254.tranSubsectorSpeed_nonmotor_India}, \code{L254.tranSubsectorVOTT_India}, \code{L254.tranSubsectorFuelPref_India},
\code{L254.StubTranTech_India}, \code{L254.StubTranTech_passthru_India}, \code{L254.StubTranTech_nonmotor_India},
\code{L254.StubTranTechLoadFactor_India}, \code{L254.StubTranTechCost_India}, \code{L254.StubTranTechCoef_India},
\code{L254.PerCapitaBased_trn_India}, \code{L254.PriceElasticity_trn_India}, \code{L254.IncomeElasticity_trn_India},
\code{L254.StubTranTechCalInput_India}, \code{L254.StubTranTechProd_nonmotor_India}, \code{L254.StubTranTechCalInput_passthru_India},
\code{L254.BaseService_trn_India}.
The corresponding file in the original data system was \code{L254.transportation_India.R} (gcam-india level2).
}
\description{
Generates GCAM-India model inputs for transportation sector by states.
}
\details{
This chunk generates input files for transportation sector with generic information for supplysector,
subsector and technologies, as well as calibrated inputs and outputs by the US states.
}
\note{
The transportation structure is heavily nested. The GCAM structure of sector/subsector/technology only
allows two levels of nesting within any sector, but a technology of one sector (e.g., trn_pass) can consume the
output of another "sector" (e.g., trn_pass_road) that is really just used to represent lower nesting levels of
that first, or parent, sector. In the transportation sector, each lower-level nesting "sector" is named by
appending a string to the parent sector. So, \code{trn_pass} contains \code{trn_pass_road} which has
\code{trn_pass_road_LDV} which has \code{trn_pass_road_LDV_4W}. Each of the links between any two of those sectors
is done with a pass-through technology within the parent sector that consumes the output of the child sector.
The technology is called a "pass-through" because it (generally) only consumes the output of the child "sector"
without making any changes to it. There's an additional complication in the transportation sector, that the
pass-through technologies are normal, standard GCAM technologies, not "tranTechnologies" which have different
parameters read in, and perform a bunch of hard-wired unit conversions between inputs and outputs.
}
\author{
AM Nov20
}
